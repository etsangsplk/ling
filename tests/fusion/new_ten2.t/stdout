
{- Sequential Fused program -}

new_ten2 =
  \ (A : Session)-> \ (B : Session)-> \ (pA : < A >)-> \ (pB : < B >)-> \ (pC : < {~ A, ~ B}>)-> \ (ann : Allocation)-> proc ()
  new/ann [ab : [A, B],nab : {~ A, ~ B}].
  ( split ab [a, b].
    ( @ pA (a)
    | @ pB (b))
  | @ pC (nab))

new_ten2_Int_dbl =
  new_ten2 (!Int)(?Int)(proc (c)
  c <- 42)(proc (d)
  let b : Int <- d)(proc (nab)
  split nab {na, nb}.
  let x : Int <- na.
  nb <- (x + x))

new_fuse_ten2_Int_dbl =
  \ (depth : Int)-> new_ten2_Int_dbl (fuse depth)

new_fuse0_ten2_Int_dbl =
  proc ()
  let A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a : Session = (!Int).
  let B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c : Session = (?Int).
  let ann#5524f65a34c0ebce45bb479607ad6a442433ca4f7066d1c0450dcd96fa4e6452 : Allocation = (fuse depth#df000b43daa8c2136eeaa8f608d1448ef689629311a74ceab830f07074e92371).
  let depth#df000b43daa8c2136eeaa8f608d1448ef689629311a74ceab830f07074e92371 : Int = 0.
  let pA#37c1609f9609eee76ac190ff4a7e5594c6a82403dfb85e6c0da41cc24468d4c5 : < A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a > = (proc (c#pA)
  c#pA <- 42).
  let pB#31ffa47257b7d93b8afeefbe1e750446b0cd9e04fc0e3b5e229556101a4b490b : < B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c > = (proc (d#pB)
  let b#pB : Int <- d#pB).
  let pC#daaef59665fe2322d8ec3edfb3c8f635899cde8e3cd61a5e68051a6dd7e07443 : < {~ A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a, ~ B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c}> = (proc (nab#pC)
  split nab#pC {na#pC, nb#pC}.
  let x#pC : Int <- na#pC.
  nb#pC <- (x#pC + x#pC)).
  new/ann#5524f65a34c0ebce45bb479607ad6a442433ca4f7066d1c0450dcd96fa4e6452 [ab : [A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a, B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c],nab : {~ A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a, ~ B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c}].
  split ab [a, b].
  split nab {na#pC, nb#pC}.
  a <- 42.
  let x#pC : Int <- na#pC.
  nb#pC <- (x#pC + x#pC).
  let b#pB : Int <- b

new_fuse1_ten2_Int_dbl =
  proc ()
  let A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a : Session = (!Int).
  let B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c : Session = (?Int).
  let ann#cf13d04a8bcaae5c51c02ea4ef645b4c6f1f0ead19fa8eac212a00c7e0e7923c : Allocation = (fuse depth#eac5907587a0b6149d836091509bc82648692abaae3ea5790192a8430d57f119).
  let depth#eac5907587a0b6149d836091509bc82648692abaae3ea5790192a8430d57f119 : Int = 1.
  let pA#37c1609f9609eee76ac190ff4a7e5594c6a82403dfb85e6c0da41cc24468d4c5 : < A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a > = (proc (c#pA)
  c#pA <- 42).
  let pB#31ffa47257b7d93b8afeefbe1e750446b0cd9e04fc0e3b5e229556101a4b490b : < B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c > = (proc (d#pB)
  let b#pB : Int <- d#pB).
  let pC#daaef59665fe2322d8ec3edfb3c8f635899cde8e3cd61a5e68051a6dd7e07443 : < {~ A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a, ~ B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c}> = (proc (nab#pC)
  split nab#pC {na#pC, nb#pC}.
  let x#pC : Int <- na#pC.
  nb#pC <- (x#pC + x#pC)).
  new/alloc [a, na#pC].
  new/alloc [b, nb#pC].
  a <- 42.
  let x#pC : Int <- na#pC.
  nb#pC <- (x#pC + x#pC).
  let b#pB : Int <- b

new_fuse2_ten2_Int_dbl =
  proc ()
  let A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a : Session = (!Int).
  let B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c : Session = (?Int).
  let ann#f6e513550939f0bae417b8a22f8b631633e3fcef73440748192d1e95b1f89e80 : Allocation = (fuse depth#d0c6bb266110f2d3d8077c34cd5fc24a0d37ceec519f8c9510896d2fd5ee9b3d).
  let depth#d0c6bb266110f2d3d8077c34cd5fc24a0d37ceec519f8c9510896d2fd5ee9b3d : Int = 2.
  let pA#37c1609f9609eee76ac190ff4a7e5594c6a82403dfb85e6c0da41cc24468d4c5 : < A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a > = (proc (c#pA)
  c#pA <- 42).
  let pB#31ffa47257b7d93b8afeefbe1e750446b0cd9e04fc0e3b5e229556101a4b490b : < B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c > = (proc (d#pB)
  let b#pB : Int <- d#pB).
  let pC#daaef59665fe2322d8ec3edfb3c8f635899cde8e3cd61a5e68051a6dd7e07443 : < {~ A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a, ~ B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c}> = (proc (nab#pC)
  split nab#pC {na#pC, nb#pC}.
  let x#pC : Int <- na#pC.
  nb#pC <- (x#pC + x#pC)).
  let x#pC : Int = 42.
  new/alloc [a, na#pC].
  let b#pB : Int = (x#pC + x#pC).
  new/alloc [nb#pC, b]

new_fuse3_ten2_Int_dbl =
  proc ()
  let A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a : Session = (!Int).
  let B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c : Session = (?Int).
  let ann#b23525fb9071558ec377c10984cb4fb4b9fd2dc9725d918471854ba09ebd48f7 : Allocation = (fuse depth#6087f394a6fac7a83a91f48a41a7beda5c467af7d622146c485c66248a92a200).
  let depth#6087f394a6fac7a83a91f48a41a7beda5c467af7d622146c485c66248a92a200 : Int = 3.
  let pA#37c1609f9609eee76ac190ff4a7e5594c6a82403dfb85e6c0da41cc24468d4c5 : < A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a > = (proc (c#pA)
  c#pA <- 42).
  let pB#31ffa47257b7d93b8afeefbe1e750446b0cd9e04fc0e3b5e229556101a4b490b : < B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c > = (proc (d#pB)
  let b#pB : Int <- d#pB).
  let pC#daaef59665fe2322d8ec3edfb3c8f635899cde8e3cd61a5e68051a6dd7e07443 : < {~ A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a, ~ B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c}> = (proc (nab#pC)
  split nab#pC {na#pC, nb#pC}.
  let x#pC : Int <- na#pC.
  nb#pC <- (x#pC + x#pC)).
  let x#pC : Int = 42.
  let b#pB : Int = (x#pC + x#pC)

new_fused_ten2_Int_dbl =
  proc ()
  let A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a : Session = (!Int).
  let B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c : Session = (?Int).
  let ann#47d781f2688eff35434d58e35a537991b5fbfe16841a1609843ae641af58792b : Allocation = fused.
  let pA#37c1609f9609eee76ac190ff4a7e5594c6a82403dfb85e6c0da41cc24468d4c5 : < A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a > = (proc (c#pA)
  c#pA <- 42).
  let pB#31ffa47257b7d93b8afeefbe1e750446b0cd9e04fc0e3b5e229556101a4b490b : < B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c > = (proc (d#pB)
  let b#pB : Int <- d#pB).
  let pC#daaef59665fe2322d8ec3edfb3c8f635899cde8e3cd61a5e68051a6dd7e07443 : < {~ A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a, ~ B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c}> = (proc (nab#pC)
  split nab#pC {na#pC, nb#pC}.
  let x#pC : Int <- na#pC.
  nb#pC <- (x#pC + x#pC)).
  let x#pC : Int = 42.
  let b#pB : Int = (x#pC + x#pC)

new_ten2_Int_fwd =
  proc ()
  let A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a : Session = (!Int).
  let B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c : Session = (?Int).
  let ann#995e1bf18f4248c09f1cf45162b1df0a7599134782b35033e43137c17c7b7790 : Allocation = (fuse 2).
  let pA#37c1609f9609eee76ac190ff4a7e5594c6a82403dfb85e6c0da41cc24468d4c5 : < A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a > = (proc (c#pA)
  c#pA <- 42).
  let pB#31ffa47257b7d93b8afeefbe1e750446b0cd9e04fc0e3b5e229556101a4b490b : < B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c > = (proc (d#pB)
  let b#pB : Int <- d#pB).
  let pC#d2b96815c21fe9cb6c54126a7ce0cca26cf91a880eca58337b7d596308f1adf2 : < {~ A#58c563cde134cc361a5d925c1e3848fb7ba1be21e1117171a7cb77110e8d4c2a, ~ B#ff463788bd40c59893d740b5312b9ed8028f951edec7df32aaf2d3c4b1371c9c}> = (proc (nab#pC)
  split nab#pC {nab#0#pC : ?Int, nab#1#pC : !Int}.
  let x#nab#0#pC : Int <- nab#0#pC.
  nab#1#pC <- x#nab#0#pC).
  let x#nab#0#pC : Int = 42.
  new/alloc [a, nab#0#pC : [: :]].
  let b#pB : Int = x#nab#0#pC.
  new/alloc [nab#1#pC : [: :], b]
